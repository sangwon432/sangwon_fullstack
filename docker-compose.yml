version: '3'
services:
  nginx:
    build:
      context: nginx
    container_name: nginx
    restart: always
    tty: true
    ports:
      - 80:80
    depends_on:
      - backend
      - front
    networks:
      - sangwon_networks

  #    image: nginx:stable-alpine
#    container_name: nginx
#    volumes:
#      - ./nginx/templates:/etc/nginx/templates
#      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
#    ports:
#      - 80:80
#    depends_on:
#      - front
#    networks:
#      - sangwon_networks

  backend:
    build:
      dockerfile: Dockerfile
      context: './backend'
    depends_on:
      - sangwondb
    volumes:
      - /backend/node_modules
      - ./backend:/backend
    ports:
      - '8000:8000'
    restart: always
    networks:
      - sangwon_networks

#      dockerfile: Dockerfile
#      context: ./backend
#      target: development
#
#    volumes:
#      - ./backend:/usr/src/app
#    env_file:
#      - ./backend/.env
#    command: npm run start:dev
#    ports:
#      - 8000:8000
#    depends_on:
#      - front
#      - sangwondb

  front:
    build:
      dockerfile: Dockerfile
      context: "./front"
    depends_on:
      - backend
    volumes:
      - /front/node_modules
      - ./front:/front
    ports:
      - 3000:3000
    networks:
      - sangwon_networks

  sangwondb:
    image: postgres:latest
    ports:
      - '5432:5432'
    env_file:
      - ./backend/.env
    volumes:
      - pg_data:/var/lib/postgresql/data/
    networks:
      - sangwon_networks

#    environment:
#      - POSTGRES_HOST=sangwondb
#      - POSTGRES_PORT=5436
#      - POSTGRES_USER=sangwon
#      - POSTGRES_PASSWORD=sangwonpassword
#      - POSTGRES_DB=sangwon_ecommerce


#        - docker.env


networks:
  sangwon_networks:
    driver: bridge

volumes:
  pg_data:


